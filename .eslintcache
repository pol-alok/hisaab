[{"D:\\haxnode.com\\me\\hisaab\\src\\index.js":"1","D:\\haxnode.com\\me\\hisaab\\src\\reportWebVitals.js":"2","D:\\haxnode.com\\me\\hisaab\\src\\App.js":"3","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\AddContact.js":"4","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\ContactCard.js":"5","D:\\haxnode.com\\me\\hisaab\\src\\services\\ContactService.js":"6","D:\\haxnode.com\\me\\hisaab\\src\\views\\AppView.js":"7","D:\\haxnode.com\\me\\hisaab\\src\\views\\TransactionView.js":"8","D:\\haxnode.com\\me\\hisaab\\src\\views\\NotFoundView.js":"9","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\Page.js":"10","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\TransactionCard.js":"11","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\AddExpense.js":"12","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\ProminentAppBar.js":"13","D:\\haxnode.com\\me\\hisaab\\src\\services\\keys.js":"14","D:\\haxnode.com\\me\\hisaab\\src\\services\\TransactionService.js":"15","D:\\haxnode.com\\me\\hisaab\\src\\services\\MonthService.js":"16"},{"size":517,"mtime":1609905394486,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1609905394487,"results":"19","hashOfConfig":"18"},{"size":561,"mtime":1610005456173,"results":"20","hashOfConfig":"18"},{"size":2161,"mtime":1609907142879,"results":"21","hashOfConfig":"18"},{"size":3661,"mtime":1610005488127,"results":"22","hashOfConfig":"18"},{"size":1223,"mtime":1610003879102,"results":"23","hashOfConfig":"18"},{"size":5282,"mtime":1609906353147,"results":"24","hashOfConfig":"18"},{"size":7875,"mtime":1610005422821,"results":"25","hashOfConfig":"18"},{"size":1628,"mtime":1609905394488,"results":"26","hashOfConfig":"18"},{"size":488,"mtime":1609905394486,"results":"27","hashOfConfig":"18"},{"size":3240,"mtime":1610450903232,"results":"28","hashOfConfig":"18"},{"size":3052,"mtime":1609905394485,"results":"29","hashOfConfig":"18"},{"size":1500,"mtime":1609905394486,"results":"30","hashOfConfig":"18"},{"size":148,"mtime":1609997472989,"results":"31","hashOfConfig":"18"},{"size":1022,"mtime":1610003794698,"results":"32","hashOfConfig":"18"},{"size":1504,"mtime":1610004321333,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1s773zl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"D:\\haxnode.com\\me\\hisaab\\src\\index.js",[],["73","74"],"D:\\haxnode.com\\me\\hisaab\\src\\reportWebVitals.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\App.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\conponents\\AddContact.js",["75","76"],"import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst Addcontact = (props) => {\r\n  const {\r\n    open,\r\n    handleClose,\r\n    contactName,\r\n    setContactName,\r\n    errorText,\r\n    setErrorText,\r\n    isContactExists,\r\n    handleSaveContact,\r\n  } = props;\r\n\r\n  const handleInputChange = (e) => {\r\n    if (e.target.value == '') {\r\n      setErrorText('This field is required!');\r\n    } else if (isContactExists(e.target.value)) {\r\n      setErrorText('This contact already exists!');\r\n    }else {\r\n      setErrorText('');\r\n    } \r\n    setContactName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby='form-dialog-title'>\r\n      <DialogTitle id='form-dialog-title'>New Contact</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please, specify the name of the person with whom you are going to\r\n          track your expenses.\r\n        </DialogContentText>\r\n        <TextField\r\n          autoFocus\r\n          margin='dense'\r\n          id='name'\r\n          label='Person Name'\r\n          fullWidth\r\n          value={contactName}\r\n          onChange={handleInputChange}\r\n          error={errorText.length === 0 ? false : true}\r\n          helperText={errorText}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={\r\n            errorText === '' && contactName !== ''\r\n              ? handleSaveContact\r\n              : () => (errorText) ? '' : setErrorText('This field is required!')\r\n          }\r\n          color='primary'>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Addcontact;\r\n","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\ContactCard.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\services\\ContactService.js",["77","78"],"import KEYS from \"./keys\";\r\n\r\nexport function buildContact(name) {\r\n  return {\r\n    id: 0,\r\n    name: name,\r\n    transactionId: 0,\r\n    transactions: [],\r\n  };\r\n}\r\nexport function insertContact(data) {\r\n  let contacts = getAllContacts();\r\n  data = buildContact(data);\r\n  data['id'] = generateContactId();\r\n  contacts.push(data);\r\n  localStorage.setItem(KEYS.contacts, JSON.stringify(contacts));\r\n}\r\n\r\nexport function deleteContact(id) {\r\n  let contacts = getAllContacts();\r\n  contacts = contacts.filter((cnt) => cnt.id != id);\r\n  localStorage.setItem(KEYS.contacts, JSON.stringify(contacts));\r\n}\r\n\r\nexport function generateContactId() {\r\n  if (localStorage.getItem(KEYS.contactId) == null)\r\n    localStorage.setItem(KEYS.contactId, '0');\r\n  var id = parseInt(localStorage.getItem(KEYS.contactId));\r\n  localStorage.setItem(KEYS.contactId, (++id).toString());\r\n  return id;\r\n}\r\n\r\nexport function getAllContacts() {\r\n  if (localStorage.getItem(KEYS.contacts) == null) {\r\n    localStorage.setItem(KEYS.contacts, JSON.stringify([]));\r\n  }\r\n  return JSON.parse(localStorage.getItem(KEYS.contacts));\r\n}\r\n\r\nexport function findById(id) {\r\n  let contacts = getAllContacts();\r\n  return contacts.filter((cnt) => cnt.id == id)[0];\r\n}\r\n","D:\\haxnode.com\\me\\hisaab\\src\\views\\AppView.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\views\\TransactionView.js",["79"],"import React, { useState } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  Typography,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport AddExpense from '../conponents/AddExpense';\r\nimport TransactionCard from '../conponents/TransactionCard';\r\nimport ProminentAppBar from '../conponents/ProminentAppBar';\r\nimport Page from '../conponents/Page';\r\nimport * as contactService from '../services/ContactService';\r\nimport * as transactionService from \"../services/TransactionService\";\r\nimport ArrowDownwardRoundedIcon from '@material-ui/icons/ArrowDownwardRounded';\r\nimport ArrowUpwardRoundedIcon from '@material-ui/icons/ArrowUpwardRounded';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    flexGrow: 1,\r\n    spacing: 0,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  giveButton: {\r\n    position: 'fixed',\r\n    zIndex: 1,\r\n    bottom: 10,\r\n    left: 0,\r\n    right: 100,\r\n    margin: '0 auto',\r\n  },\r\n  takeButton: {\r\n    position: 'fixed',\r\n    zIndex: 1,\r\n    bottom: 10,\r\n    left: 100,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst TransactionView = () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  const [txnId, setTxnId] = useState(0);\r\n  const [openGive, setOpenGive] = useState(false);\r\n  const [openTake, setOpenTake] = useState(false);\r\n  const [itemName, setItemName] = useState('');\r\n  const [value, setValue] = useState(0);\r\n  const [nameErrorText, setNameErrorText] = useState('');\r\n  const [valueErrorText, setValueErrorText] = useState('');\r\n  const [contact, setContact] = useState(contactService.findById(id));\r\n  const getTotal = () => {\r\n    return contact.transactions\r\n      .map((txn) => parseInt(txn.value))\r\n      .reduce((a, b) => a + b, 0);\r\n  };\r\n  const [total, setTotal] = useState(getTotal());\r\n\r\n  const handleOpenGive = () => {\r\n    setOpenGive(true);\r\n  };\r\n\r\n  const handleOpenTake = () => {\r\n    setOpenTake(true);\r\n  };\r\n\r\n  const handleCloseGive = () => {\r\n    setOpenGive(false);\r\n    setValue(0);\r\n    setItemName('');\r\n    setNameErrorText('');\r\n    setValueErrorText('');\r\n  };\r\n\r\n  const handleCloseTake = () => {\r\n    setOpenTake(false);\r\n    setValue(0);\r\n    setItemName('');\r\n    setNameErrorText('');\r\n    setValueErrorText('');\r\n  };\r\n\r\n  const handleSaveItemGive = () => {\r\n    let item = txnId\r\n      ? findTransactionById(txnId)\r\n      : {\r\n          id: ++contact.transactionId,\r\n          itemName: itemName,\r\n          value: value,\r\n          cdate: new Date(),\r\n        };\r\n    [item.itemName, item.value] = [itemName, value];\r\n    if (!txnId) {\r\n      contact.transactions.push(item);\r\n    }\r\n    transactionService.addExpanceInContact(contact);\r\n    setTotal(getTotal());\r\n    setOpenGive(false);\r\n    setItemName('');\r\n    setValue(0);\r\n    setTxnId(0);\r\n  };\r\n\r\n  const handleSaveItemTake = () => {\r\n    let item = txnId\r\n      ? findTransactionById(txnId)\r\n      : {\r\n          id: ++contact.transactionId,\r\n          itemName: itemName,\r\n          value: -value,\r\n          cdate: new Date(),\r\n        };\r\n    [item.itemName, item.value] = [itemName, -value];\r\n    if (!txnId) {\r\n      contact.transactions.push(item);\r\n    }\r\n    transactionService.addExpanceInContact(contact);\r\n    setTotal(getTotal());\r\n    setOpenTake(false);\r\n    setItemName('');\r\n    setValue(0);\r\n    setTxnId(0);\r\n  };\r\n  const onDelete = (id) => {\r\n    transactionService.deleteExpanceOfContact(contact, id);\r\n    setContact(contactService.findById(contact.id));\r\n    setTotal(getTotal());\r\n  };\r\n  const onEdit = (id) => {\r\n    let currTxn = findTransactionById(id);\r\n    setTxnId(id);\r\n    setItemName(currTxn.itemName);\r\n    setValue(Math.abs(currTxn.value));\r\n    currTxn.value < 0 ? setOpenTake(true) : setOpenGive(true);\r\n  };\r\n\r\n  const findTransactionById = (txnId) => {\r\n    return contact.transactions.filter((txn) => txn.id == txnId)[0];\r\n  };\r\n\r\n  return (\r\n    <Page className={classes.root} title={contact.name}>\r\n      <div>\r\n        <ProminentAppBar />\r\n        <Grid container justify='center' className={classes.root}>\r\n          <Grid item md={12}>\r\n            <Paper className={classes.paper} style={{ background: '#e6e6e6' }}>\r\n              <Grid container wrap='nowrap' spacing={2}>\r\n                <ListItem\r\n                  style={{ width: '85%' }}\r\n                  component={RouterLink}\r\n                  to='/hisaab'>\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={contact.name} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography\r\n                        component='span'\r\n                        variant='h5'\r\n                        color='textPrimary'>\r\n                        {contact.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Chip\r\n                  variant='outlined'\r\n                  color={total < 0 ? 'secondary' : 'primary'}\r\n                  size='small'\r\n                  avatar={\r\n                    <Avatar>\r\n                      <b>₹</b>\r\n                    </Avatar>\r\n                  }\r\n                  label={Math.abs(total)}\r\n                />\r\n              </Grid>\r\n              {contact.transactions.map((txn, index) => (\r\n                <TransactionCard\r\n                  key={index}\r\n                  txn={txn}\r\n                  onDelete={onDelete}\r\n                  onEdit={onEdit}\r\n                />\r\n              ))}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container>\r\n              <Grid item md={6}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  className={classes.giveButton}\r\n                  startIcon={<ArrowUpwardRoundedIcon />}\r\n                  onClick={handleOpenGive}>\r\n                  Give\r\n                </Button>\r\n              </Grid>\r\n              <Grid item md={6}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  className={classes.takeButton}\r\n                  startIcon={<ArrowDownwardRoundedIcon />}\r\n                  onClick={handleOpenTake}>\r\n                  Take\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <AddExpense\r\n              isAdd={!txnId}\r\n              open={openGive}\r\n              handleClose={handleCloseGive}\r\n              itemName={itemName}\r\n              setItemName={setItemName}\r\n              value={value}\r\n              setValue={setValue}\r\n              nameErrorText={nameErrorText}\r\n              setNameErrorText={setNameErrorText}\r\n              valueErrorText={valueErrorText}\r\n              setValueErrorText={setValueErrorText}\r\n              handleSaveItem={handleSaveItemGive}\r\n            />\r\n            <AddExpense\r\n              isAdd={!txnId}\r\n              open={openTake}\r\n              handleClose={handleCloseTake}\r\n              itemName={itemName}\r\n              setItemName={setItemName}\r\n              value={value}\r\n              setValue={setValue}\r\n              nameErrorText={nameErrorText}\r\n              setNameErrorText={setNameErrorText}\r\n              valueErrorText={valueErrorText}\r\n              setValueErrorText={setValueErrorText}\r\n              handleSaveItem={handleSaveItemTake}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default TransactionView;\r\n","D:\\haxnode.com\\me\\hisaab\\src\\views\\NotFoundView.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\conponents\\Page.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\conponents\\TransactionCard.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\conponents\\AddExpense.js",["80"],"import { Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst AddExpence = (props) => {\r\n  const {\r\n    isAdd,\r\n    open,\r\n    handleClose,\r\n    itemName,\r\n    setItemName,\r\n    nameErrorText,\r\n    setNameErrorText,\r\n    value,\r\n    setValue,\r\n    valueErrorText,\r\n    setValueErrorText,\r\n    handleSaveItem,\r\n  } = props;\r\n\r\n  const vaidate = () => {\r\n    if (itemName === '') setNameErrorText('This field is required!');\r\n    if (!value) setValueErrorText('Incorrect entry.');\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby='form-dialog-title'>\r\n      <DialogTitle id='form-dialog-title'>\r\n        {isAdd ? 'Add Expance' : 'Edit Expance'}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please, specify the name of the item with their expense.\r\n        </DialogContentText>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={6}>\r\n            <TextField\r\n              autoFocus\r\n              margin='dense'\r\n              label='Item Name'\r\n              fullWidth\r\n              value={itemName}\r\n              onChange={(e) => {\r\n                if (e.target.value !== '') setNameErrorText('');\r\n                else setNameErrorText('This field is required!');\r\n                setItemName(e.target.value);\r\n              }}\r\n              error={nameErrorText.length === 0 ? false : true}\r\n              helperText={nameErrorText}\r\n            />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <TextField\r\n              margin='dense'\r\n              label='Value'\r\n              fullWidth\r\n              value={value}\r\n              onChange={(e) => {\r\n                if (e.target.value !== '0' && /^\\d+$/.test(e.target.value))\r\n                  setValueErrorText('');\r\n                else setValueErrorText('Incorrect entry.');\r\n                setValue(e.target.value);\r\n              }}\r\n              error={valueErrorText.length === 0 ? false : true}\r\n              helperText={valueErrorText}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color='primary'>\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={\r\n            nameErrorText === '' &&\r\n            valueErrorText === '' &&\r\n            itemName !== '' &&\r\n            value\r\n              ? handleSaveItem\r\n              : vaidate\r\n          }\r\n          color='primary'>\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddExpence;\r\n","D:\\haxnode.com\\me\\hisaab\\src\\conponents\\ProminentAppBar.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\services\\keys.js",[],"D:\\haxnode.com\\me\\hisaab\\src\\services\\TransactionService.js",["81","82","83","84"],"import * as contactService from \"./ContactService\";\r\nimport * as monthService from \"./MonthService\";\r\nimport KEYS from \"./keys\";\r\n\r\nexport function deleteExpanceOfContact(contact, txnId) {\r\n  contact.transactions = contact.transactions.filter((txn) => txn.id != txnId);\r\n  addExpanceInContact(contact);\r\n}\r\n\r\nexport function addExpanceInContact(data) {\r\n  let contacts = contactService.getAllContacts();\r\n  let recordIndex = contacts.findIndex((cnt) => cnt.id == data.id);\r\n  contacts[recordIndex] = { ...data };\r\n  localStorage.setItem(KEYS.contacts, JSON.stringify(contacts));\r\n}\r\n\r\nexport function deleteExpanceOfMonth(month, txnId) {\r\n    month.transactions = month.transactions.filter((txn) => txn.id != txnId);\r\n    addExpanceInMonth(month);\r\n  }\r\n  \r\n  export function addExpanceInMonth(data) {\r\n    let months = monthService.getAllMonths();\r\n    let recordIndex = months.findIndex((m) => m.id == data.id);\r\n    months[recordIndex] = { ...data };\r\n    localStorage.setItem(KEYS.months, JSON.stringify(months));\r\n  }","D:\\haxnode.com\\me\\hisaab\\src\\services\\MonthService.js",["85","86"],"import KEYS from \"./keys\";\r\n\r\nfunction initialMonthData() {\r\n    return [\r\n        {\r\n            id: 0,\r\n            mname: 'January',\r\n            transactionId: 0,\r\n            transactions: [],\r\n        },\r\n        {\r\n            id: 1,\r\n            mname: 'February',\r\n            transactionId: 0,\r\n            transactions: [],\r\n        }\r\n    ]\r\n    \r\n}\r\n\r\nfunction buildMonth(name) {\r\n  return {\r\n    id: 0,\r\n    mname: name,\r\n    transactionId: 0,\r\n    transactions: [],\r\n  };\r\n}\r\nexport function insertMonth(data) {\r\n  let months = getAllMonths();\r\n  data = buildMonth(data);\r\n  data['id'] = generateMonthId();\r\n  months.push(data);\r\n  localStorage.setItem(KEYS.months, JSON.stringify(months));\r\n}\r\n\r\nexport function deleteMonth(id) {\r\n  let months = getAllMonths();\r\n  months = months.filter((m) => m.id != id);\r\n  localStorage.setItem(KEYS.months, JSON.stringify(months));\r\n}\r\n\r\nexport function generateMonthId() {\r\n  if (localStorage.getItem(KEYS.monthId) == null)\r\n    localStorage.setItem(KEYS.monthId, '0');\r\n  var id = parseInt(localStorage.getItem(KEYS.monthId));\r\n  localStorage.setItem(KEYS.monthId, (++id).toString());\r\n  return id;\r\n}\r\n\r\nexport function getAllMonths() {\r\n  if (localStorage.getItem(KEYS.months) == null) {\r\n    localStorage.setItem(KEYS.months, JSON.stringify(initialMonthData()));\r\n  }\r\n  return JSON.parse(localStorage.getItem(KEYS.months));\r\n}\r\n\r\nexport function findById(id) {\r\n  let months = getAllMonths();\r\n  return months.filter((m) => m.id == id)[0];\r\n}\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":23,"column":24,"nodeType":"97","messageId":"98","endLine":23,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":21,"column":46,"nodeType":"97","messageId":"98","endLine":21,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":42,"column":42,"nodeType":"97","messageId":"98","endLine":42,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":155,"column":56,"nodeType":"97","messageId":"98","endLine":155,"endColumn":58},{"ruleId":"91","severity":1,"message":"92","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":25},{"ruleId":"95","severity":1,"message":"99","line":6,"column":70,"nodeType":"97","messageId":"98","endLine":6,"endColumn":72},{"ruleId":"95","severity":1,"message":"96","line":12,"column":56,"nodeType":"97","messageId":"98","endLine":12,"endColumn":58},{"ruleId":"95","severity":1,"message":"99","line":18,"column":68,"nodeType":"97","messageId":"98","endLine":18,"endColumn":70},{"ruleId":"95","severity":1,"message":"96","line":24,"column":52,"nodeType":"97","messageId":"98","endLine":24,"endColumn":54},{"ruleId":"95","severity":1,"message":"99","line":39,"column":38,"nodeType":"97","messageId":"98","endLine":39,"endColumn":40},{"ruleId":"95","severity":1,"message":"96","line":60,"column":36,"nodeType":"97","messageId":"98","endLine":60,"endColumn":38},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]